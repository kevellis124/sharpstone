{"version":3,"sources":["logo.svg","SportButton.js","Header.js","VisualizationContainer.js","App.js","reportWebVitals.js","index.js"],"names":["SportButton","props","className","text","Header","VisualizationContainer","style","width","data","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAAe,I,YCQAA,MARf,SAAqBC,GACjB,OACI,wBAAQC,UAAU,SAAlB,SACKD,EAAME,QCWJC,MAZf,WAEI,OACI,gCACI,4CACA,cAAC,EAAD,CAAaD,KAAK,QAClB,cAAC,EAAD,CAAaA,KAAK,QAClB,cAAC,EAAD,CAAaA,KAAK,Y,QCPf,SAASE,EAAuBJ,GAiC3C,OACI,qBAAKK,MAJS,CACdC,MAAO,QAGP,SACI,cAAC,OAAD,CAAMC,KAlCD,CACTC,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QACjEC,SAAU,CACN,CACAC,MAAO,mBACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBpB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,UCX5BqB,MATf,WACE,OACE,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACG,EAAD,QCGSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.89966d91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function SportButton(props) {\n    return (\n        <button className=\"button\">\n            {props.text}\n        </button>\n    );\n}\n\nexport default SportButton;","import SportButton from \"./SportButton\";\n\nfunction Header() {\n\n    return (\n        <div>\n            <h1>SharpStone</h1>\n            <SportButton text=\"NBA\" />\n            <SportButton text=\"NFL\" />\n            <SportButton text=\"MLB\" />\n        </div>\n    );\n}\n\nexport default Header;","import { Line } from 'react-chartjs-2';\n\nexport default function VisualizationContainer(props) {\n    const data = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n        datasets: [\n            {\n            label: 'My First dataset',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: [65, 59, 80, 81, 56, 55, 0]\n            }\n        ]\n        };\n    // Adjust this how you'd like. \"em\" is a unit of relativity. \"100em\" means 100% of the screen.\n    // You can also use \"px\" for hard-coded pixels, but different devices have different pixel-counts so using\n    // relative sizes is better.\n    const lineStyle = {\n        width: '80em'\n    }\n    return (\n        <div style={lineStyle}>\n            <Line data={data}/>\n        </div>\n    );\n}","import logo from './logo.svg';\nimport './App.css';\nimport Header from './Header';\nimport VisualizationContainer from './VisualizationContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <VisualizationContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}